<?php

namespace DFSClientV3\Models\ContentAnalysisApi;

use DFSClientV3\Entity\Custom\ContentAnalysisCategoryTrendsLiveEntityMain;
use DFSClientV3\Models\AbstractModel;

class ContentAnalysisCategoryTrendsLive extends AbstractModel
{
    protected $method = 'POST';

    protected $isSupportedMerge = true;

    protected $pathToMainData = 'tasks->{$postID}->result';

    protected $requestToFunction = 'content_analysis/category_trends/live';

    protected $resultShouldBeTransformedToArray = true;

    protected $useNewMapper = true;

    /**
     * @param int $categoryCode
     *
     * @return $this
     */
    public function setCategoryCode(string $categoryCode)
    {
        $this->payload['category_code'] = $categoryCode;

        return $this;
    }

    /**
     * @param string $dateFrom
     *
     * @return $this
     */
    public function setDateFrom(string $dateFrom)
    {
        $this->payload['date_from'] = $dateFrom;

        return $this;
    }

    /**
     * @param string $dateTo
     *
     * @return $this
     */
    public function setDateTo(string $dateTo)
    {
        $this->payload['date_to'] = $dateTo;

        return $this;
    }

    /**
     * @param string $dateGroup
     *
     * @return $this
     */
    public function setDateGroup(string $dateGroup)
    {
        $this->payload['date_group'] = $dateGroup;

        return $this;
    }

    /**
     * @param array $pageType
     *
     * @return $this
     */
    public function setPageType(array $pageType)
    {
        $this->payload['page_type'] = $pageType;

        return $this;
    }

    /**
     * @param string $searchMode
     *
     * @return $this
     */
    public function setSearchMode(string $searchMode)
    {
        $this->payload['search_mode'] = $searchMode;

        return $this;
    }

    /**
     * @param int $internalListLimit
     *
     * @return $this
     */
    public function setInternalListLimit(int $internalListLimit)
    {
        $this->payload['internal_list_limit'] = $internalListLimit;

        return $this;
    }

    /**
     * @param array $initialDatasetFilters
     *
     * @return $this
     */
    public function setInitialDatasetFilters(array $initialDatasetFilters)
    {
        $this->payload['initial_dataset_filters'] = $initialDatasetFilters;

        return $this;
    }

    /**
     * @param float $positiveConnotationThreshold
     *
     * @return $this
     */
    public function setPositiveConnotationThreshold(float $positiveConnotationThreshold)
    {
        $this->payload['positive_connotation_threshold'] = $positiveConnotationThreshold;

        return $this;
    }

    /**
     * @param float $sentimentsConnotationThreshold
     *
     * @return $this
     */
    public function setSentimentsConnotationThreshold(float $sentimentsConnotationThreshold)
    {
        $this->payload['sentiments_connotation_threshold'] = $sentimentsConnotationThreshold;

        return $this;
    }

    /**
     * @return ContentAnalysisCategoryTrendsLiveEntityMain
     */
    #[\Override]
    public function get(): ContentAnalysisCategoryTrendsLiveEntityMain
    {
        return parent::get(); // TODO: Change the autogenerated stub
    }
}
