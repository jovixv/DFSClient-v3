<?php

namespace DFSClientV3\Models\ContentAnalysisApi;

use DFSClientV3\Entity\Custom\ContentAnalysisSearchLiveEntityMain;
use DFSClientV3\Models\AbstractModel;

class ContentAnalysisSearchLive extends AbstractModel
{
    protected $method = 'POST';

    protected $isSupportedMerge = true;

    protected $pathToMainData = 'tasks->{$postID}->result';

    protected $requestToFunction = 'content_analysis/search/live';

    protected $resultShouldBeTransformedToArray = true;

    protected $useNewMapper = true;

    /**
     * @param string $keyword
     *
     * @return $this
     */
    public function setKeyword(string $keyword)
    {
        $this->payload['keyword'] = $keyword;

        return $this;
    }

    /**
     * @param array $keywordFields
     *
     * @return $this
     */
    public function setKeywordFields(array $keywordFields)
    {
        $this->payload['keyword_fields'] = $keywordFields;

        return $this;
    }

    /**
     * @param array $pageType
     *
     * @return $this
     */
    public function setPageType(array $pageType)
    {
        $this->payload['page_type'] = $pageType;

        return $this;
    }

    /**
     * @param string $searchMode
     *
     * @return $this
     */
    public function setSearchMode(string $searchMode)
    {
        $this->payload['search_mode'] = $searchMode;

        return $this;
    }

    /**
     * @param int $limit
     *
     * @return $this
     */
    public function setLimit(int $limit)
    {
        $this->payload['limit'] = $limit;

        return $this;
    }

    /**
     * @param int $offset
     *
     * @return $this
     */
    public function setOffset(int $offset)
    {
        $this->payload['offset'] = $offset;

        return $this;
    }

    /**
     * @param array $orderBy
     *
     * @return $this
     */
    public function setOrderBy(array $orderBy)
    {
        $this->payload['order_by'] = $orderBy;

        return $this;
    }

    /**
     * @param array $filters
     *
     * @return $this
     */
    public function setFilters(array $filters)
    {
        $this->payload['filters'] = $filters;

        return $this;
    }

    /**
     * @param string $offsetToken
     *
     * @return $this
     */
    public function setOffsetToken(string $offsetToken)
    {
        $this->payload['offset_token'] = $offsetToken;

        return $this;
    }

    /**
     * @return ContentAnalysisSearchLiveEntityMain
     */
    #[\Override]
    public function get(): ContentAnalysisSearchLiveEntityMain
    {
        return parent::get(); // TODO: Change the autogenerated stub
    }
}
