<?php

namespace DFSClientV3\Models\SERP_API;

use DFSClientV3\Models\AbstractModel;

class SettingSerpTasks extends AbstractModel
{
    protected $method = 'POST';
    protected $isSupportedMerge = true;
    protected $pathToMainData = 'tasks->{$postID}->result';
    protected $requestToFunction = 'serp/{$se}/{$seType}/task_post';
    protected $resultShouldBeTransformedToArray = true;

    /**
     * @param string $langCode
     * @return $this
     */
    public function setLanguageCode(string $langCode)
    {
        $this->payload['language_code'] = $langCode;

        return $this;
    }
    
    /**
     * @param string $langName
     * @return $this
     */
    public function setLanguageName(string $langName)
    {
        $this->payload['language_name'] = $langName;
        
        return $this;
    }
    
    /**
     * @param string $key
     * @return $this
     */
    public function setKey(string $key)
    {
        $this->payload['keyword'] = $key;

        return $this;
    }

    /**
     * @param string $locationName
     * @return $this
     */
    public function setLocationName(string $locationName)
    {
        $this->payload['location_name'] = $locationName;

        return $this;
    }

    /**
     * @param int $locationCode
     * @return $this
     */
    public function setLocationCode(int $locationCode)
    {
        $this->payload['location_code'] = $locationCode;
        
        return $this;
    }
    
    /**
     * @param string $postBackUrl
     * @return $this
     */
    public function setPostBackUrl(string $postBackUrl)
    {
        $this->payload['postback_url'] = $postBackUrl;
        
        return $this;
    }
    
    /**
     * @param string $postBackData
     * @return $this
     */
    public function setPostBackData(string $postBackData)
    {
        $this->payload['postback_data'] = $postBackData;
        
        return $this;
    }
    
    /**
     * @param string $device
     * @return $this
     */
    public function setDevice(string $device)
    {
        $this->payload['device'] = $device;
        
        return $this;
    }
    
    /**
     * @param int $priority
     * @return $this
     */
    public function setPriority(int $priority)
    {
        $this->payload['priority'] = $priority;
        
        return $this;
    }

    /**
     * @param string $seType
     * @return $this
     * @throws \Exception
     */
    public function setSeType(string $seType)
    {
        if (!in_array($seType,$this->seTypes))
            throw new \Exception('Provided se type not allowed');

        $this->requestToFunction = str_replace('{$seType}', $seType, $this->requestToFunction);

        return $this;
    }

    /**
     * @param string $seName
     * @return $this
     */
    public function setSe(string $seName)
    {
        $this->requestToFunction = str_replace('{$se}', $seName, $this->requestToFunction);
        return $this;
    }

    /**
     * @return \DFSClientV3\Entity\Custom\SettingSerpTasksEntityMain
     */
    public function get(): \DFSClientV3\Entity\Custom\SettingSerpTasksEntityMain
    {
        return parent::get();
    }

    /**
     * @return \DFSClientV3\Entity\Custom\SettingSerpTasksEntityMain
     */
    public static function getAfterMerge(array $modelPool)
    {
        return parent::getAfterMerge($modelPool); // TODO: Change the autogenerated stub
    }

}
