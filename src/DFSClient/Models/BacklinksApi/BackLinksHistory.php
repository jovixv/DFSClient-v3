<?php

namespace DFSClientV3\Models\BacklinksApi;

use DFSClientV3\Entity\Custom\BackLinksHistoryEntityMain;
use DFSClientV3\Models\AbstractModel;

class BackLinksHistory extends AbstractModel
{
    protected $method = 'POST';

    protected $isSupportedMerge = true;

    protected $pathToMainData = 'tasks->{$postID}->result';

    protected $requestToFunction = 'backlinks/history/live';

    protected $resultShouldBeTransformedToArray = true;

    protected $jsonContainVariadicType = true;

    protected $pathsToVariadicTypesAndValue = [
        'tasks->(:number)->result->(:number)->items->(:number)' => 'type',
    ];

    protected $useNewMapper = true;

    /**
     * @param string $target
     *
     * @return $this
     */
    public function setTarget(string $target)
    {
        $this->payload['target'] = $target;

        return $this;
    }

    /**
     * @param string $dateAt
     *
     * @return $this
     */
    public function setDateFrom(string $dateAt)
    {
        $this->payload['date_from'] = $dateAt;

        return $this;
    }

    /**
     * @param string $dateTo
     *
     * @return $this
     */
    public function setDateTo(string $dateTo)
    {
        $this->payload['date_to'] = $dateTo;

        return $this;
    }

    /**
     * @param string $tag
     *
     * @return $this
     */
    public function setTag(string $tag)
    {
        $this->payload['tag'] = $tag;

        return $this;
    }

    /**
     * @return BackLinksHistoryEntityMain
     */
    #[\Override]
    public function get(): BackLinksHistoryEntityMain
    {
        return parent::get(); // TODO: Change the autogenerated stub
    }

    /**
     * @return array
     */
    #[\Override]
    protected function initCustomFunctionForPaths(): array
    {
        return [
            'tasks->(:number)->result->(:number)->items->(:number)->referring_links_tld'                => fn ($key, $value) => (array) $value,
            'tasks->(:number)->result->(:number)->items->(:number)->referring_links_types'              => fn ($key, $value) => (array) $value,
            'tasks->(:number)->result->(:number)->items->(:number)->referring_links_attributes'         => fn ($key, $value) => (array) $value,
            'tasks->(:number)->result->(:number)->items->(:number)->referring_links_platform_types'     => fn ($key, $value) => (array) $value,
            'tasks->(:number)->result->(:number)->items->(:number)->referring_links_semantic_locations' => fn ($key, $value) => (array) $value,
            'tasks->(:number)->result->(:number)->items->(:number)->referring_links_countries'          => fn ($key, $value) => (array) $value,
        ];
    }
}
